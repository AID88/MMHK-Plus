/* 
	Created by Jactari
	Updated by Aspirin and Aendawyn
	Maintained by Aendawyn

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
	
*/

$(document).ready(function(){
    {
        function cherche_talent(carriere,talent){
            var index_carriere=inArrayIndex(heros.carriere,carriere);
            if(index_carriere===null)return 0;
            if(heros.talent[index_carriere]===undefined||heros.talent[index_carriere][talent]===undefined)return 0;
            return heros.talent[index_carriere][talent]
        }
        function permalien_heros(){
            var donnees={};

            donnees.faction=heros.faction;
            donnees.portrait=heros.portrait;
            donnees.archetype=heros.archetype;
            donnees.niveau=heros.niveau;
            donnees.bonus_tenancier=heros.bonus_tenancier;
            donnees.respecialisations=heros.respecialisations;
            donnees.artefacts=[];
            for(var a=0;a<8;a++){
                if(heros.inventaire[a]!==undefined)donnees.artefacts[a]=heros.inventaire[a];else donnees.artefacts[a]=0
            }
            donnees.carrieres=[];
            for(var c=1;c<4;c++){
                if(heros.carriere[c]!==undefined)donnees.carrieres[c]=heros.carriere[c];else donnees.carrieres[c]=15
            }
            donnees.bonus_a=heros.bonus.a;
            donnees.bonus_d=heros.bonus.d;
            donnees.bonus_m=heros.bonus.m;
            donnees.bonus_ap=heros.bonus.ap;
            donnees.bonus_dp=heros.bonus.dp;
            donnees.bonus_mp=heros.bonus.mp;
            donnees.talents=[];
            for(var c in _carrieres){
                donnees.talents[c]=[];
                for(var t in _talents[c])donnees.talents[c][t]=cherche_talent(c,t)
            }
            donnees.competence=heros.competence;
            donnees.competence_utilisee=heros.competence_utilisee;
            donnees.graals=heros.graals;
            donnees.dolmens=heros.dolmens;
            donnees.guildes=[];
            for(var g=0;g<4;g++){
                if(heros.guildes[g]!==undefined)donnees.guildes[g]=heros.guildes[g];else heros.guildes[g]=0
            }
            for(var ch in heros.competences_hereditaires){
                donnees[ch]=heros.competences_hereditaires[ch]
            }
            donnees.classement_voies=heros.classement_voies;
            return'<a href="?info='+encode_donnees_heros(donnees)+'">'+_traduction.permalien_heros[_langue]+'</a>'
        }
        function analyse_info_url(code){
            var donnees=decode_donnees_heros(code);
            if(donnees===false){
                avertissement(_avertissements.parametre_url_incorrect[_langue]);
                return false
            }
            heros.faction=donnees.faction;
            heros.portrait=donnees.portrait;
            heros.archetype=donnees.archetype;
            heros.niveau=donnees.niveau;
            heros.bonus_tenancier=donnees.bonus_tenancier;
            heros.respecialisations=donnees.respecialisations;
            if(donnees.carrieres[1]!=15){
                heros.carriere[1]=donnees.carrieres[1];
                heros.talent[1]=[]
            }
            if(donnees.carrieres[2]!=15){
                heros.carriere[2]=donnees.carrieres[2];
                heros.talent[2]=[]
            }
            if(donnees.carrieres[3]!=15){
                heros.carriere[3]=donnees.carrieres[3];
                heros.talent[3]=[]
            }
            heros.bonus.a=donnees.bonus_a;
            heros.bonus.d=donnees.bonus_d;
            heros.bonus.m=donnees.bonus_m;
            heros.bonus.ap=donnees.bonus_ap;
            heros.bonus.dp=donnees.bonus_dp;
            heros.bonus.mp=donnees.bonus_mp;
            for(var c in _carrieres){
                for(var t in _talents[c]){
                    var talent=donnees.talents[c][t];
                    var num_carriere=inArrayIndex(heros.carriere,c);
                    if(heros.talent[num_carriere]!==undefined)heros.talent[num_carriere][t]=talent;
                    if(inArray([4,6,7,8],c)){
                        if(t==2){
                            heros.scribe[num_carriere]=talent;
                            if(heros.scribe[0]<talent)heros.scribe[0]=talent
                        }
                        if(t==1){
                            heros.arcane[num_carriere]=talent;
                            if(heros.arcane[0]<talent)heros.arcane[0]=talent
                        }
                    }
                }
            }
            heros.competence=donnees.competence;
            heros.competence_utilisee=donnees.competence_utilisee;
            heros.graals=donnees.graals;
            heros.dolmens=donnees.dolmens;
            for(var g=0;g<4;g++){
                heros.guildes[g]=donnees.guildes[g]
            }
            for(var ch in heros.competences_hereditaires){
                heros.competences_hereditaires[ch]=donnees[ch]
            }
            heros.classement_voies=donnees.classement_voies;
            for(var a=0;a<8;a++){
                if(donnees.artefacts[a]>0){
                    heros.inventaire[a]=donnees.artefacts[a];
                    if(_artefacts[heros.inventaire[a]].bonus!==undefined)for(var b in _artefacts[heros.inventaire[a]].bonus)if(_artefacts[heros.inventaire[a]].voie!==undefined){
                        var multiplicateur=1+(_classement_voies[heros.classement_voies][_artefacts[heros.inventaire[a]].voie]*_multiplicateur_voie);
                        heros.bonus[b]-=_artefacts[heros.inventaire[a]].bonus[b];
                        heros.bonus[b]+=(_artefacts[heros.inventaire[a]].bonus[b]*multiplicateur)
                    }
                }
            }
        }
        function permalien_combat(id_camp){
            var camp=_camps[id_camp];
            var camp_abr=_camps_abr[id_camp];
            var id_camp_adverse=(id_camp===0)?1:0;
            var camp_adverse=_camps[id_camp_adverse];
            var camp_adverse_abr=_camps_abr[id_camp_adverse];
            var donnees={};

            donnees[camp_abr]={
                statut:1,
                dolmens:0,
                larmes:0,
                lieu:0,
                fortification:0,
                forts:0,
                fort_principal:0,
                cri_de_guerre:0,
                ralliement:0,
                inspiration:0,
                heros:1,
                bonus_ecole:[0,0,0,0],
                niveau:heros.niveau,
                faction:heros.faction,
                archetype:heros.archetype,
                arcanes:heros.arcane[0],
                instinct:[],
                expert:[],
                artefacts:[],
                troupes:[],
                mhr:{
                    signe:0,
                    valeur:0
                },
                sort:[{
                    id:63,
                    tour:1
                },{
                    id:63,
                    tour:2
                }],
                classement_voies:0
            };

            donnees[camp_adverse_abr]={
                statut:0,
                dolmens:0,
                larmes:0,
                lieu:0,
                fortification:0,
                forts:0,
                fort_principal:0,
                cri_de_guerre:0,
                ralliement:0,
                inspiration:0,
                heros:0,
                bonus_ecole:[0,0,0,0],
                niveau:0,
                faction:0,
                archetype:0,
                arcanes:0,
                artefacts:[0,0,0,0,0,0,0,0],
                instinct:[0,0,0,0],
                expert:[0,0,0,0],
                troupes:[],
                mhr:{
                    signe:0,
                    valeur:0
                },
                sort:[{
                    id:63,
                    tour:1
                },{
                    id:63,
                    tour:2
                }],
                classement_voies:0
            };

            for(var a=0;a<8;a++){
                if(heros.inventaire[a]!==undefined)donnees[camp_abr].artefacts[a]=heros.inventaire[a];else donnees[camp_abr].artefacts[a]=0
            }
            for(var x in _talents_magie){
                if(_talents_magie[x].t==0)donnees[camp_abr].instinct[_carrieres[_talents_magie[x].c].ecole]=cherche_talent(_talents_magie[x].c,_talents_magie[x].t);
                if(_talents_magie[x].t==3)donnees[camp_abr].expert[_carrieres[_talents_magie[x].c].ecole]=cherche_talent(_talents_magie[x].c,_talents_magie[x].t)
            }
            for(var x in _talents_combat[camp]){
                var c=_talents_combat[camp][x].c;
                var t=_talents_combat[camp][x].t;
                donnees[camp_abr][_talents[c][t].nom_machine]=cherche_talent(c,t)
            }
            for(var x in _talents_combat[camp_adverse]){
                var c=_talents_combat[camp_adverse][x].c;
                var t=_talents_combat[camp_adverse][x].t;
                donnees[camp_adverse_abr][_talents[c][t].nom_machine]=0
            }
            for(var p=1;p<8;p++)donnees.a.troupes[p]={
                unite:255,
                nombre:0
            };

            for(var p=1;p<8;p++)donnees.d.troupes[p]={
                unite:255,
                nombre:0
            };

            donnees[camp_abr].larmes=heros.graals;
            donnees[camp_abr].dolmens=heros.dolmens;
            for(var g=0;g<4;g++){
                donnees[camp_abr].bonus_ecole[g]=heros.guildes[g]
            }
            for(var ch in heros.competences_hereditaires){
                donnees[camp_abr][ch]=heros.competences_hereditaires[ch];
                donnees[camp_adverse_abr][ch]=0
            }
            donnees[camp_abr].classement_voies=heros.classement_voies;
            donnees.saison=nouvelle_saison;
            return'<a href="'+_traduction.combat[_langue]+'?info='+encode_donnees_combat(donnees)+'">'+_traduction['permalien_'+camp][_langue]+'</a>'
        }
        function bouton_liens_permanents(){
            if(!permalinkbutton){
                $('#liens-permanents').html('<input type="submit" value="'+_traduction.bouton_permalien_heros[_langue]+'" />');
                $('#liens-permanents input').click(function(){
                    liens_permanents()
                });
                permalinkbutton=true
            }
            if(!permalinkevent){
                permalinkevent=true
            }
        }
        function liens_permanents(){
            var html='<ul><li>'+permalien_heros()+'</li>';
            html+='<li>'+permalien_combat(0)+'</li>';
            html+='<li>'+permalien_combat(1)+'</li></ul>';
            $('#liens-permanents').html(html);
            permalinkbutton=false
        }
    }
    {
        function maj_exp(){
            heros.experience=_niveaux[heros.niveau][0];
            var max=40;
            var barre_max=118;
            var barre=Math.floor(heros.niveau*barre_max/max);
            var html='<span id="experience-fond" style="width:'+barre+'px;"></span>';
            html+='<span id="experience-nombre">'+formate_nombre(heros.experience,0)+'</span>';
            $('#experience-valeur').html(html)
        }
        function maj_adm(){
            $('#attaque-valeur').removeClass('plus');
            $('#defense-valeur').removeClass('plus');
            $('#magie-valeur').removeClass('plus');
            var archetype=_archetypes[heros.archetype];
            heros.attaque=(archetype.attaque==0)?0:_niveaux[heros.niveau][archetype.attaque];
            if(heros.competences_hereditaires.heros_superieur>0)heros.attaque+=_competences_hereditaires.heros_superieur.bonus.a[heros.competences_hereditaires.heros_superieur]*(1+(_multiplicateur_voie*_classement_voies[heros.classement_voies][_competences_hereditaires.heros_superieur.voie]));
            if(heros.competences_hereditaires.revelation_de_caracteristiques>0&&heros.niveau>=15)heros.attaque+=Math.floor(heros.niveau/15)*Math.round(_competences_hereditaires.revelation_de_caracteristiques.bonus.a[heros.competences_hereditaires.revelation_de_caracteristiques]*(1+(_multiplicateur_voie*_classement_voies[heros.classement_voies][_competences_hereditaires.revelation_de_caracteristiques.voie])));
            var attaque=heros.attaque;
            if(heros.bonus['ap']>0){
                attaque+=heros.attaque*(heros.bonus['ap']/100);
                $('#attaque-valeur').addClass('plus')
            }
            if(heros.bonus['a']>0){
                attaque+=heros.bonus['a'];
                $('#attaque-valeur').addClass('plus')
            }
            heros.defense=(archetype.defense==0)?0:_niveaux[heros.niveau][archetype.defense];
            if(heros.competences_hereditaires.heros_superieur>0)heros.defense+=_competences_hereditaires.heros_superieur.bonus.d[heros.competences_hereditaires.heros_superieur]*(1+(_multiplicateur_voie*_classement_voies[heros.classement_voies][_competences_hereditaires.heros_superieur.voie]));
            if(heros.competences_hereditaires.revelation_de_caracteristiques>0&&heros.niveau>=15)heros.defense+=Math.floor(heros.niveau/15)*Math.round(_competences_hereditaires.revelation_de_caracteristiques.bonus.d[heros.competences_hereditaires.revelation_de_caracteristiques]*(1+(_multiplicateur_voie*_classement_voies[heros.classement_voies][_competences_hereditaires.revelation_de_caracteristiques.voie])));
            var defense=heros.defense;
            if(heros.bonus['dp']>0){
                defense+=heros.defense*(heros.bonus['dp']/100);
                $('#defense-valeur').addClass('plus')
            }
            if(heros.bonus['d']>0){
                defense+=heros.bonus['d'];
                $('#defense-valeur').addClass('plus')
            }
            heros.magie=(archetype.magie==0)?0:_niveaux[heros.niveau][archetype.magie];
            if(heros.competences_hereditaires.heros_superieur>0)heros.magie+=_competences_hereditaires.heros_superieur.bonus.m[heros.competences_hereditaires.heros_superieur]*(1+(_multiplicateur_voie*_classement_voies[heros.classement_voies][_competences_hereditaires.heros_superieur.voie]));
            if(heros.competences_hereditaires.revelation_de_caracteristiques>0&&heros.niveau>=15)heros.magie+=Math.floor(heros.niveau/15)*Math.round(_competences_hereditaires.revelation_de_caracteristiques.bonus.m[heros.competences_hereditaires.revelation_de_caracteristiques]*(1+(_multiplicateur_voie*_classement_voies[heros.classement_voies][_competences_hereditaires.revelation_de_caracteristiques.voie])));
            var magie=heros.magie;
            if(heros.bonus['mp']>0){
                magie+=heros.magie*(heros.bonus['mp']/100);
                $('#magie-valeur').addClass('plus')
            }
            if(heros.bonus['m']>0){
                magie+=heros.bonus['m'];
                $('#magie-valeur').addClass('plus')
            }
            $('#attaque-valeur').html(formate_nombre(attaque,0));
            $('#defense-valeur').html(formate_nombre(defense,0));
            $('#magie-valeur').html(formate_nombre(magie,0))
        }
        function maj_prog(){
            var archetype=_archetypes[heros.archetype];
            $('#attaque-image').attr('title',_traduction.attaque[_langue]+_traduction.deux_points[_langue]+' '+_progression[archetype.attaque][_langue]+' ('+_progression[archetype.attaque].description[_langue]+')');
            $('#defense-image').attr('title',_traduction.defense[_langue]+_traduction.deux_points[_langue]+' '+_progression[archetype.defense][_langue]+' ('+_progression[archetype.defense].description[_langue]+')');
            $('#magie-image').attr('title',_traduction.magie[_langue]+_traduction.deux_points[_langue]+' '+_progression[archetype.magie][_langue]+' ('+_progression[archetype.magie].description[_langue]+')')
        }
        function maj_comp(){
            heros.competence=heros.niveau+heros.bonus_tenancier-(heros.respecialisations*2);
            if(heros.competences_hereditaires.heros_talentueux>0)heros.competence+=Math.round(_competences_hereditaires.heros_talentueux.bonus[heros.competences_hereditaires.heros_talentueux]*(1+(_multiplicateur_voie*_classement_voies[heros.classement_voies][_competences_hereditaires.heros_talentueux.voie])));
            if(heros.competences_hereditaires.revelation_de_talents>0&&heros.niveau>=15)heros.competence+=Math.floor(heros.niveau/15)*Math.round(_competences_hereditaires.revelation_de_talents.bonus[heros.competences_hereditaires.revelation_de_talents]*(1+(_multiplicateur_voie*_classement_voies[heros.classement_voies][_competences_hereditaires.revelation_de_talents.voie])));
            $('#competence').text(heros.competence);
            $('#competence-utilisee').text(heros.competence_utilisee);
            if(heros.bonus_tenancier>0)$('#competence').addClass('plus');else $('#competence').removeClass('plus');
            if(heros.respecialisations>0)$('#competence').addClass('respec');else $('#competence').removeClass('respec');
            if(heros.competence<heros.competence_utilisee&&!$('#competence-utilisee').hasClass('depassement'))$('#competence-utilisee').addClass('depassement');else $('#competence-utilisee').removeClass('depassement')
        }
        function tri_tfn(a,b){
            if(a.type!=b.type)return(a.type-b.type);
            if(a.faction!=b.faction)return(a.faction-b.faction);
            return(a.niv-b.niv)
        }
        function tri_artefacts(liste){
            liste.sort(tri_tfn)
        }
        function clone_artefacts(liste){
            var nouvelle=[];
            for(var i in liste){
                nouvelle[i]={
                    id:i,
                    nom:{
                        fr:liste[i].nom['fr'],
                        en:liste[i].nom['en'],
                        de:liste[i].nom['de'],
                        ru:liste[i].nom['ru']
                    },
                    faction:liste[i].faction,
                    icone:liste[i].icone,
                    niv:liste[i].niv,
                    slot:liste[i].slot,
                    type:liste[i].type,
                    effets:liste[i].effets
                };

                if(liste[i].bonus!==undefined)nouvelle[i].bonus=liste[i].bonus
            }
            return nouvelle
        }
        function maj_artefacts_disponibles(){
            var liste='';
            var _arte=clone_artefacts(_artefacts);
            tri_artefacts(_arte);
            for(var s in _slots){
                var nom_slot=toCapitalCase(_slots[s][_langue]);
                if(heros.inventaire[s]===undefined)$('#slot-'+s).attr('title',nom_slot);else $('#slot-'+s).attr('title','');
                $('#slot-'+s).html('');
                var html='<div id="slot-'+s+'-description" class="description-artefact cache"></div>';
                html+='<div id="slot-'+s+'-menu" class="menu-artefacts cache">';
                html+='<div id="choix-artefact-x-'+s+'" class="choix-artefact" title="'+_traduction.rien[_langue]+'"></div>';
                var nombre_arte=1;
                for(var a in _arte){
                    arte=_arte[a];
                    if(arte.slot==s){
                        var nom=arte.nom[_langue];
                        html+='<div class="choix-artefact" id="choix-artefact-'+arte.id+'" title="'+nom+'"></div>';
                        nombre_arte++
                    }
                }
                html+='</div>';
                $('#slot-'+s).html(html);
                $('#slot-'+s+'-menu').css('height',(5*36)+'px');
                $('#slot-'+s+'-menu').css('width',(Math.ceil(nombre_arte/5)*37)+'px')
            }
            for(var a in _arte){
                arte=_arte[a];
                if($('#choix-artefact-'+arte.id).attr('id')=='choix-artefact-'+arte.id){
                    image_css_artefact('choix-artefact-'+arte.id,arte.id)
                }
            }
            for(var s in _slots){
                image_css_slot('choix-artefact-x-'+s,s)
            }
            $('.choix-artefact').click(function(event){
                event.stopPropagation();
                var x=$(this).attr('id').substr(15,1);
                if(x=='x'){
                    var slot=parseInt($(this).attr('id').substr(17,1),10);
                    desequipe_artefact(slot)
                }else{
                    var arte=parseInt($(this).attr('id').substr(15),10);
                    var slot=_artefacts[arte].slot;
                    equipe_artefact(arte,slot)
                }
                $(this).parent().addClass('cache')
            })
        }
        function change_description_artefact(slot,artefact){
            if(slot===undefined||artefact===undefined)return false;
            if(artefact===null)return $('#slot-'+slot+'-description').html('');
            if(artefact.nom===undefined)return false;
            var nom=artefact.nom[_langue];
            var desc='<span class="nom">'+nom+'</span>';
            desc+='<span class="proprietes">'+_traduction.niveau[_langue]+' '+artefact.niv;
            if(artefact.faction!==''&&artefact.faction>=0){
                if(artefact.faction===undefined||_factions[artefact.faction]===undefined)return false;
                desc+=' — '+_factions[artefact.faction].nom[_langue]
            }
            desc+=' — '+_slots[slot][_langue];
            if(artefact.type!==''){
                if(artefact.type===undefined||_types_artefacts[artefact.type]===undefined)return false;
                desc+=' — '+_types_artefacts[artefact.type][_langue]
            }
            desc+='</span>';
            for(var i in artefact.effets){
                if(artefact.effets===undefined||artefact.effets[i]===undefined||artefact.effets[i].id===undefined||_effets[artefact.effets[i].id]===undefined)return false;
                var effet=_effets[artefact.effets[i].id];
                var valeur=effet.v[artefact.effets[i].niv-1];
                desc+='<span class="effet">'+effet.description[_langue].replace(/X/,'<span class="valeur-effet">'+valeur+'</span>')+'</span>'
            }
            $('#slot-'+slot+'-description').html(desc);
            return true
        }
        function choix_artefacts_equipes(){
            for(var s in _slots){
                $('#slot-'+s+'-menu .choix-artefact').each(function(){
                    var artefact=parseInt($(this).attr('id').substr(15),10);
                    if(heros.inventaire[s]!==undefined&&heros.inventaire[s]==artefact){
                        if(!$(this).hasClass('equipe'))$(this).addClass('equipe').html(image_html_artefact_equipe())
                    }else{
                        $(this).removeClass('equipe').html('')
                    }
                })
            }
        }
        function maj_globale(){
            actualise_portrait();
            image_css_archetype('heros',heros.archetype);
            maj_exp();
            maj_adm();
            maj_prog();
            maj_comp();
            $('#faction').val(heros.faction);
            $('#num_portrait').val(heros.portrait);
            $('#archetype').val(heros.archetype);
            $('#niveau').val(heros.niveau);
            change_niveau(heros.niveau);
            $('#tenancier').val(heros.bonus_tenancier);
            $('#respec').val(heros.respecialisations);
            for(var c=1;c<4;c++){
                if(heros.carriere[c]!==undefined){
                    var carriere=heros.carriere[c];
                    $('#carriere-'+c+'-active').attr('checked','checked');
                    $('#carriere-'+c).removeClass('cache');
                    $('#c'+c+' ul.talents').removeClass('cache');
                    var options='';
                    for(var j in _carrieres){
                        if(validite_carriere(j))options+='<option value="'+j+'"'+((j==carriere)?' selected="selected"':'')+'>'+_carrieres[j].nom[_langue]+'</option>'
                    }
                    $('#carriere-'+c).html(options);
                    vue_carriere_icone(c);
                    vue_carriere_description(c);
                    for(var t=0;t<5;t++)vue_talent(c,t)
                }else{
                    $('#carriere-'+c).html('');
                    if(!$('#carriere-'+c).hasClass('cache'))$('#carriere-'+c).addClass('cache');
                    $('#carriere-'+c+'-active').removeAttr('checked');
                    $('#c'+c+' span.description-carriere').html('');
                    if(!$('#c'+c+' span.description-carriere').hasClass('cache'))$('#c'+c+' span.description-carriere').addClass('cache');
                    if(!$('#c'+c+' ul.talents').hasClass('cache'))$('#c'+c+' ul.talents').addClass('cache');
                    vue_carriere_icone(c)
                }
            }
            for(var slot in _slots){
                if(heros.inventaire[slot]!==undefined){
                    var artefact=_artefacts[heros.inventaire[slot]];
                    image_css_artefact('slot-'+slot,heros.inventaire[slot]);
                    $('#slot-'+slot).attr('title','');
                    change_description_artefact(slot,artefact)
                }else{
                    image_css_artefact('slot-'+slot);
                    $('#slot-'+slot).attr('title',_slots[slot][_langue]);
                    change_description_artefact(slot,null)
                }
            }
            $('#dolmens').val(heros.dolmens);
            $('#graals').val(heros.graals);
            for(var e=0;e<4;e++)$('#guildes-'+e).val(heros.guildes[e]);
            for(var ch in _competences_hereditaires)$('#ch-'+ch).val(heros.competences_hereditaires[ch]);$('#heredite-voies').val(heros.classement_voies)
        }
        function vue_talent_nom_description(num_carriere,talent){
            var carriere=heros.carriere[num_carriere];
            if(carriere===undefined||heros.talent[num_carriere][talent]===undefined){
                $('#f-carrieres ul.talents:eq('+(num_carriere-1)+') li span.talent:eq('+talent+')').removeAttr('title');
                $('#f-carrieres ul.talents:eq('+(num_carriere-1)+') li span.talent:eq('+talent+')').text('');
                return true
            }
            var desc=_talents[carriere][talent].description[_langue];
            var nom=_talents[carriere][talent].nom[_langue];
            $('#f-carrieres ul.talents:eq('+(num_carriere-1)+') li span.talent:eq('+talent+')').attr('title',desc);
            $('#f-carrieres ul.talents:eq('+(num_carriere-1)+') li span.talent:eq('+talent+')').text(nom)
        }
        function vue_talent_niveau_detail(num_carriere,talent){
            if(num_carriere===undefined||talent===undefined)return false;
            if(heros.talent[num_carriere]===undefined||heros.talent[num_carriere][talent]===undefined){
                $('#talent-'+num_carriere+'-'+talent).val(0);
                $('#detail-talent-'+num_carriere+'-'+talent).text('')
            }
            var niveau=heros.talent[num_carriere][talent];
            $('#talent-'+num_carriere+'-'+talent).val(niveau);
            if(niveau>0){
                if(heros.carriere[num_carriere]===undefined||_talents[heros.carriere[num_carriere]]===undefined||_talents[heros.carriere[num_carriere]][talent]===undefined)return false;
                var detail=_talents[heros.carriere[num_carriere]][talent];
                var plus=detail.plus?'+':'-';
                var pourcent=detail.pourcent?'%':'';
                $('#detail-talent-'+num_carriere+'-'+talent).text(' ('+plus+detail.v[niveau]+pourcent+')')
            }else{
                $('#detail-talent-'+num_carriere+'-'+talent).text('')
            }
            return true
        }
        function vue_talent(num_carriere,talent){
            var li='#f-carrieres ul.talents:eq('+(num_carriere-1)+') li:eq('+talent+')';
            $(li).removeClass('cache');
            if(heros.talent[num_carriere]===undefined||heros.talent[num_carriere][talent]===undefined){
                if(!$(li).hasClass('cache'))$(li).addClass('cache');
                return
            }
            vue_talent_icone(num_carriere,talent);
            vue_talent_nom_description(num_carriere,talent);
            vue_talent_niveau_detail(num_carriere,talent)
        }
        function vue_talent_icone(num_carriere,talent){
            var carriere=heros.carriere[num_carriere];
            if(heros.talent[num_carriere][talent]===undefined)talent=undefined;
            image_css_talent('icone-talent-'+num_carriere+'-'+talent,carriere,talent)
        }
        function vue_talents(num_carriere){
            if(heros.carriere[num_carriere]===undefined){
                if(!$('#c'+num_carriere+' ul.talents').hasClass('cache'))$('#c'+num_carriere+' ul.talents').addClass('cache')
            }else{
                $('#c'+num_carriere+' ul.talents').removeClass('cache')
            }
            for(var t=0;t<5;t++)vue_talent(num_carriere,t)
        }
        function vue_carriere_icone(num){
            var carriere=heros.carriere[num];
            image_css_carriere('icone-c'+num,carriere);
            image_css_carriere_type('c'+num,carriere)
        }
        function vue_carriere_description(num_carriere){
            if(heros.carriere[num_carriere]===undefined){
                $('#c'+num_carriere+' span.description-carriere').text('');
                if(!$('#c'+num_carriere+' span.description-carriere').hasClass('cache'))$('#c'+num_carriere+' span.description-carriere').addClass('cache')
            }else{
                var desc=_carrieres[heros.carriere[num_carriere]].description[_langue];
                $('#c'+num_carriere+' span.description-carriere').removeClass('cache').text(desc)
            }
        }
    }
    {
        function controle_portrait(){
            if(heros.portrait<2)$('#prev').attr('disabled','disabled');else $('#prev').removeAttr('disabled');
            if(heros.portrait>18)$('#next').attr('disabled','disabled');else $('#next').removeAttr('disabled')
        }
        function actualise_portrait(){
            image_css_heros('portrait',heros.faction,heros.portrait);
            $('#num_portrait').text('('+heros.portrait+')');
            controle_portrait();
            bouton_liens_permanents()
        }
        function change_faction(faction){
            if(_factions[faction]===undefined)return false;
            heros.faction=faction;
            actualise_portrait();
            controle_validite_carrieres();
            bouton_liens_permanents()
        }
        function change_archetype(archetype){
            if(_archetypes[archetype]===undefined)return false;
            heros.archetype=archetype;
            image_css_archetype('heros',heros.archetype);
            if(heros.niveau!==null){
                maj_adm()
            }
            maj_prog();
            controle_validite_carrieres()
        }
        function change_niveau(niveau){
            heros.niveau=niveau;
            var options='';
            for(var i=0;i<=Math.floor(niveau/2);i++){
                options+='<option value="'+i+'">'+i+'</option>'
            }
            $('#respec').html(options);
            if(heros.respecialisations>Math.floor(niveau/2)){
                heros.respecialisations=Math.floor(niveau/2)
            }
            $('#respec').val(heros.respecialisations);
            maj_exp();
            if(heros.archetype!==null){
                maj_adm()
            }
            maj_comp()
        }
        function change_tenancier(niv){
            if(niv>=0&&niv<4){
                heros.bonus_tenancier=niv
            }else return false;
            bouton_liens_permanents();
            return maj_comp()
        }
        function change_respec(niv){
            if(niv>=0&&niv<=Math.floor(heros.niveau/2)){
                heros.respecialisations=niv
            }else return false;
            bouton_liens_permanents();
            return maj_comp()
        }
        function controle_validite_carrieres(){
            for(var num=1;num<4;num++){
                var carriere=heros.carriere[num];
                if((carriere!==undefined&&validite_carriere(carriere)===false)||(carriere===undefined&&$('#carriere-'+num+'-active').attr('checked')===true))desactive_carriere(num)
            }
        }
        function validite_carriere(carriere){
            var archetype=_archetypes[heros.archetype].type;
            if((_carrieres[carriere].ecole!==undefined&&archetype!='guerrier'&&inArray(_factions[heros.faction].ecoles,_carrieres[carriere].ecole))||_carrieres[carriere].ecole===undefined){
                return true
            }
            return false
        }
        function active_carriere(num){
            if(heros.competence-heros.competence_utilisee<1){
                avertissement(_avertissements.competence_insuffisante_carriere[_langue]);
                $('#carriere-'+num+'-active').removeAttr('checked');
                return false
            }
            var select='#carriere-'+num;
            $(select).removeClass('cache');
            var options='<option value=""></option>';
            for(var i=0;i<_carrieres.length;i++){
                if(validite_carriere(i)&&!inArray(heros.carriere,i)){
                    options+='<option value="'+i+'">'+_carrieres[i].nom[_langue]+'</option>'
                }
            }
            $(select).html(options);
            bouton_liens_permanents()
        }
        function desactive_carriere(num){
            if(heros.carriere[num]!==undefined)heros.competence_utilisee--;
            delete heros.carriere[num];
            $('#carriere-'+num+'-active').removeAttr('checked');
            $('#carriere-'+num).html('');
            $('#c'+num+' span.description-carriere').html('');
            if(!$('#carriere-'+num).hasClass('cache'))$('#carriere-'+num).addClass('cache');
            if(!$('#c'+num+' span.description-carriere').hasClass('cache'))$('#c'+num+' span.description-carriere').addClass('cache');
            if(!$('#c'+num+' ul.talents').hasClass('cache'))$('#c'+num+' ul.talents').addClass('cache');
            vue_carriere_icone(num);
            if(heros.talent[num]!==undefined){
                for(var i in heros.talent[num]){
                    if(heros.talent[num][i]!==undefined){
                        heros.competence_utilisee-=_apprentissage[heros.talent[num][i]];
                        if(heros.scribe[num]>0&&i==2){
                            for(var j in heros.scribe){
                                if(j!=num&&j>0&&heros.scribe[j]>0){
                                    heros.competence_utilisee+=_apprentissage[heros.talent[num][i]];
                                    break
                                }
                            }
                            heros.scribe[num]=null;
                            heros.scribe[0]=Math.max(Math.max(heros.scribe[1],heros.scribe[2]),heros.scribe[3])
                        }
                        if(heros.arcane[num]>0&&i==1){
                            for(var j in heros.arcane){
                                if(j!=num&&j>0&&heros.arcane[j]>0){
                                    heros.competence_utilisee+=_apprentissage[heros.talent[num][i]];
                                    break
                                }
                            }
                            heros.arcane[num]=null;
                            heros.arcane[0]=Math.max(Math.max(heros.arcane[1],heros.arcane[2]),heros.arcane[3])
                        }
                        delete heros.talent[num][i];
                        vue_talent(num,i)
                    }
                }
                delete heros.talent[num];
                vue_talents(num)
            }
            maj_comp();
            bouton_liens_permanents()
        }
        function change_carriere(num,carriere){
            if(heros.competence-heros.competence_utilisee<1&&heros.carriere[num]===undefined){
                avertissement(_avertissements.competence_insuffisante_carriere[_langue]);
                $('#carriere-'+num).val('');
                return false
            }
            for(var i=1;i<4;i++)if(i!=num){
                var autre_carriere=$('#carriere-'+i).val();
                if(autre_carriere===carriere){
                    avertissement(_avertissements.doublon_carriere[_langue]);
                    if(heros.carriere[num]!==undefined)$('#carriere-'+num).val(heros.carriere[num]);else $('#carriere-'+num).val('');
                    return false
                }
            }
            if($('#carriere-'+num+' option:first').attr('value')==''){
                $('#carriere-'+num+' option:first').remove()
            }
            if(heros.carriere[num]===undefined){
                heros.competence_utilisee++
            }else{
                for(i in heros.talent[num]){
                    heros.competence_utilisee-=_apprentissage[heros.talent[num][i]];
                    if(heros.scribe[num]>0&&i==2){
                        for(var j in heros.scribe){
                            if(j!=num&&j>0&&heros.scribe[j]>0){
                                heros.competence_utilisee+=_apprentissage[heros.talent[num][i]];
                                break
                            }
                        }
                        heros.scribe[num]=null;
                        heros.scribe[0]=Math.max(Math.max(heros.scribe[1],heros.scribe[2]),heros.scribe[3])
                    }
                    if(heros.arcane[num]>0&&i==1){
                        for(var j in heros.arcane){
                            if(j!=num&&j>0&&heros.arcane[j]>0){
                                heros.competence_utilisee+=_apprentissage[heros.talent[num][i]];
                                break
                            }
                        }
                        heros.arcane[num]=null;
                        heros.arcane[0]=Math.max(Math.max(heros.arcane[1],heros.arcane[2]),heros.arcane[3])
                    }
                    delete heros.talent[num][i];
                    vue_talent(num,i)
                }
                delete heros.talent[num];
                vue_talents(num)
            }
            heros.carriere[num]=carriere;
            heros.talent[num]=[];
            vue_carriere_icone(num);
            maj_comp();
            vue_carriere_description(num);
            vue_talents(num);
            var talents=_talents[carriere];
            for(t in talents){
                heros.talent[num][t]=0;
                if(talents[t].nom['fr']=='Scribe'){
                    heros.scribe[num]=0;
                    if(heros.scribe[0]>0){
                        heros.scribe[num]=heros.scribe[0];
                        heros.talent[num][t]=heros.scribe[0]
                    }
                }
                if(talents[t].nom['fr']=='Maitre des arcanes'){
                    heros.arcane[num]=0;
                    if(heros.arcane[0]>0){
                        heros.arcane[num]=heros.arcane[0];
                        heros.talent[num][t]=heros.arcane[0]
                    }
                }
                vue_talent(num,t)
            }
            for(var c=1;c<4;c++)if(c!=num){
                if(heros.carriere[c]===undefined)var options='<option value=""></option>';else var options='';
                for(var i=0;i<_carrieres.length;i++){
                    if(validite_carriere(i)&&(!inArray(heros.carriere,i)||i==heros.carriere[c])){
                        options+='<option value="'+i+'">'+_carrieres[i].nom[_langue]+'</option>'
                    }
                }
                $('#carriere-'+c).html(options);
                $('#carriere-'+c).val(heros.carriere[c])
            }
            bouton_liens_permanents()
        }
        function change_talent(num_carriere,talent,valeur){
            if(num_carriere===undefined||talent===undefined||valeur===undefined)return false;
            if(heros.talent[num_carriere]===undefined||heros.talent[num_carriere][talent]===undefined)maj_talent(num_carriere,talent,0);
            if(heros.carriere[num_carriere]===undefined||_talents[heros.carriere[num_carriere]]===undefined||_talents[heros.carriere[num_carriere]][talent]===undefined)return false;
            var scribe=(_talents[heros.carriere[num_carriere]][talent].nom['fr']=='Scribe');
            var arcane=(_talents[heros.carriere[num_carriere]][talent].nom['fr']=='Maitre des arcanes');
            if(heros.talent[num_carriere]===undefined||heros.talent[num_carriere][talent]===undefined)return false;else var valeur_actuelle=heros.talent[num_carriere][talent];
            if(valeur>valeur_actuelle){
                var competence_disponible=heros.competence-heros.competence_utilisee;
                var points_but=_apprentissage[valeur];
                var base=(arcane)?heros.arcane[0]:((scribe)?heros.scribe[0]:valeur_actuelle);
                var points_base=_apprentissage[base];
                if(competence_disponible>=(points_but-points_base)){
                    heros.competence_utilisee+=points_but-points_base;
                    maj_comp();
                    maj_talent(num_carriere,talent,valeur);
                    if(scribe){
                        heros.scribe[num_carriere]=valeur;
                        heros.scribe[0]=valeur;
                        for(var i in heros.scribe)if(i>0&&heros.scribe[i]<heros.scribe[0]&&heros.scribe[i]!==null){
                            heros.scribe[i]=heros.scribe[0];
                            maj_talent(i,2,heros.scribe[0])
                        }
                    }
                    if(arcane){
                        heros.arcane[num_carriere]=valeur;
                        heros.arcane[0]=valeur;
                        for(var i in heros.arcane)if(i>0&&heros.arcane[i]<heros.arcane[0]&&heros.arcane[i]!==null){
                            heros.arcane[i]=heros.arcane[0];
                            maj_talent(i,1,heros.arcane[0])
                        }
                    }
                }else{
                    avertissement(_avertissements.competence_insuffisante_talent[_langue]);
                    vue_talent(num_carriere,talent)
                }
            }else if(valeur<valeur_actuelle){
                var autre_scribe=false;
                var autre_arcane=false;
                for(var i in heros.scribe){
                    if(i>0&&i!=num_carriere&&heros.scribe[i]==heros.scribe[0]){
                        autre_scribe=true
                    }
                }
                for(var i in heros.arcane){
                    if(i>0&&i!=num_carriere&&heros.arcane[i]==heros.arcane[0]){
                        autre_arcane=true
                    }
                }
                if(scribe&&autre_scribe){
                    heros.competence_utilisee-=_apprentissage[valeur_actuelle]-_apprentissage[valeur];
                    maj_comp();
                    for(var i in heros.scribe){
                        if(i>0&&heros.scribe[i]!==null){
                            maj_talent(i,2,valeur);
                            heros.scribe[i]=valeur
                        }
                    }
                    heros.scribe[0]=valeur
                }else if(arcane&&autre_arcane){
                    heros.competence_utilisee-=_apprentissage[valeur_actuelle]-_apprentissage[valeur];
                    maj_comp();
                    for(var i in heros.arcane){
                        if(i>0&&heros.arcane[i]!==null){
                            maj_talent(i,1,valeur);
                            heros.arcane[i]=valeur
                        }
                    }
                    heros.arcane[0]=valeur
                }else{
                    heros.competence_utilisee-=_apprentissage[valeur_actuelle]-_apprentissage[valeur];
                    maj_comp();
                    maj_talent(num_carriere,talent,valeur);
                    if(scribe){
                        heros.scribe[0]=valeur;
                        heros.scribe[num_carriere]=valeur
                    }
                    if(arcane){
                        heros.arcane[0]=valeur;
                        heros.arcane[num_carriere]=valeur
                    }
                }
            }
            vue_talent(num_carriere,talent);
            bouton_liens_permanents();
            return true
        }
        function maj_talent(num_carriere,talent,valeur){
            if(heros.talent[num_carriere]===undefined)heros.talent[num_carriere]=[];
            heros.talent[num_carriere][talent]=valeur;
            vue_talent(num_carriere,talent);
            bouton_liens_permanents()
        }
        function equipe_artefact(artefact,slot){
            var arte=_artefacts[artefact];
            var ancien_arte=_artefacts[heros.inventaire[slot]];
            if(arte.voie==undefined){
                var points_necessaires=0;
                for(var a in _slots)if(a!=slot&&heros.inventaire[a]!==undefined&&_artefacts[heros.inventaire[a]].voie==undefined){
                    for(var e in _artefacts[heros.inventaire[a]].effets)points_necessaires+=_artefacts[heros.inventaire[a]].effets[e].niv
                }
                var niveau_arte=0;
                for(var e in arte.effets){
                    points_necessaires+=arte.effets[e].niv;
                    niveau_arte+=arte.effets[e].niv
                }
                if(points_necessaires>heros.niveau){
                    avertissement(_avertissements.niveau_artefact[_langue].replace(/X/,heros.niveau).replace(/Y/,niveau_arte).replace(/Z/,points_necessaires));
                    return false
                }
            }
            image_css_artefact('slot-'+slot,artefact);
            change_description_artefact(slot,arte);
            if(ancien_arte!==undefined&&ancien_arte.bonus!==undefined)for(var i in bonus_arte){
                if(ancien_arte.bonus[bonus_arte[i]]!==undefined)heros.bonus[bonus_arte[i]]-=ancien_arte.bonus[bonus_arte[i]]
            }
            if(arte.bonus!==undefined)for(var i in bonus_arte){
                if(arte.bonus[bonus_arte[i]]!==undefined){
                    var multiplicateur=1;
                    if(arte.voie!==undefined){
                        multiplicateur+=_classement_voies[heros.classement_voies][arte.voie]*_multiplicateur_voie
                    }
                    heros.bonus[bonus_arte[i]]+=arte.bonus[bonus_arte[i]]*multiplicateur
                }
            }
            maj_adm();
            heros.inventaire[slot]=artefact;
            $('#slot-'+slot).attr('title','');
            choix_artefacts_equipes();
            bouton_liens_permanents()
        }
        function desequipe_artefact(slot){
            if(slot===undefined)return false;
            if(heros.inventaire[slot]===undefined)return false;
            var arte=_artefacts[heros.inventaire[slot]];
            if(arte===undefined)return false;
            image_css_artefact('slot-'+slot);
            change_description_artefact(slot,null);
            if(arte.bonus!==undefined)for(var i in bonus_arte){
                if(arte.bonus[bonus_arte[i]]!==undefined){
                    var multiplicateur=1;
                    if(arte.voie!==undefined){
                        multiplicateur+=_classement_voies[heros.classement_voies][arte.voie]*_multiplicateur_voie
                    }
                    heros.bonus[bonus_arte[i]]-=arte.bonus[bonus_arte[i]]*multiplicateur
                }
            }
            maj_adm();
            delete heros.inventaire[slot];
            $('#slot-'+slot).attr('title',_slots[slot][_langue]);
            choix_artefacts_equipes();
            bouton_liens_permanents();
            return true
        }
    }
    function initialisation_heros(){
        heros={
            portrait:1,
            faction:0,
            archetype:0,
            niveau:1,
            attaque:1,
            defense:1,
            magie:0,
            experience:0,
            competence:1,
            competence_utilisee:0,
            bonus_tenancier:0,
            respecialisations:0,
            carriere:[],
            talent:[],
            scribe:[0,null,null,null],
            arcane:[0,null,null,null],
            inventaire:[],
            bonus:{
                'a':0,
                'd':0,
                'm':0,
                'ap':0,
                'dp':0,
                'mp':0
            },
            dolmens:0,
            graals:0,
            guildes:[0,0,0,0],
            competences_hereditaires:{
                revelation_de_talents:0,
                mysticisme:0,
                heros_superieur:0,
                heros_talentueux:0,
                maitrise_des_sorts:0,
                revelation_de_caracteristiques:0,
                relever_les_morts:0,
                resistance_magique:0,
                moral_eleve:0,
                resurrection:0,
                tir_de_barrage:0,
                recrutement_quotidien:0,
                contribution_populaire:0,
                richesse_personnelle:0,
                butin_de_guerre:0
            },
            classement_voies:0
        }
    };

    var heros={};

    initialisation_heros();
    bonus_arte=['a','d','m','ap','dp','mp'];
    var permalinkbutton=false;
    var permalinkevent=false;
    actualise_portrait();
    var sauvegardes_heros=[];
    $('#conteneur form').submit(function(){
        return false
    });
    $('#gestion-heros').addClass('ui-autocomplete-loading');

    for(var i=0;i<_factions.length;i++)$('#faction').append('<option value="'+i+'">'+_factions[i].nom[_langue]+'</option>');
    $('#faction option:first').attr('selected','selected');
    for(var i=0;i<_archetypes.length;i++)$('#archetype').append('<option value="'+i+'">'+_archetypes[i].nom[_langue]+'</option>');
    for(var n in _niveaux)if(n>0)$('#niveau').append('<option value="'+n+'">'+n+'</option>');for(var i=0;i<4;i++)$('#tenancier').append('<option value="'+i+'">'+i+'</option>');
    for(var i=0;i<1;i++)$('#respec').append('<option value="'+i+'">'+i+'</option>');
    for(var c=1;c<4;c++)for(var t=0;t<5;t++)for(var v=0;v<4;v++)$('#talent-'+c+'-'+t).append('<option value="'+v+'">'+v+'</option>');
    maj_artefacts_disponibles();
    $('input[type=checkbox]').removeAttr('checked');
    $('input[type=radio]').removeAttr('checked');
    var html='<fieldset id="f-alliance-joueur"><div><label for="dolmens">'+_traduction.dolmens_controles[_langue]+_traduction.deux_points[_langue]+' </label><select id="dolmens">';
    for(var d=0;d<16;d++)html+='<option value="'+d+'">'+d+'</option>';
    html+='</select> <label for="graals">'+_traduction.graals_controles[_langue]+_traduction.deux_points[_langue]+' </label><select id="graals">';
    for(var g=0;g<19;g++)html+='<option value="'+g+'">'+g+'</option>';
    html+='</select><br />';
    html+=_traduction.guildes_specialisees[_langue]+' ';
    for(var e in _ecoles_magie){
        html+='<label for="guildes-'+e+'">'+_ecoles_magie[e].nom[_langue]+' </label><select class="guildes" id="guildes-'+e+'">';
        for(var n=0;n<13;n++)html+='<option value="'+n+'">'+n+'</option>';
        html+='</select>';
        if(e<3)html+=', ';else html+='.'
    }
    html+='</div></fieldset>';
    $('#f-carrieres').after(html);
    var html='<fieldset id="f-heredite"><div>';
    for(var cat in{
        h:1,
        t:1,
        r:1
    }){
        for(var voie in _voies){
            for(var ch in _competences_hereditaires)if(_competences_hereditaires[ch].categorie==cat&&_competences_hereditaires[ch].voie==voie){
                html+='<label for="ch-'+ch+'">'+_competences_hereditaires[ch].nom[_langue]+_traduction.deux_points[_langue]+' </label><select class="competence-hereditaire" id="ch-'+ch+'">';
                for(var n=0;n<11;n++)html+='<option value="'+n+'">'+n+'</option>';
                html+='</select> '
            }
            if(cat!='r')html+='<br />'
        }
        if(cat=='r')html+='<br />'
    }
    html+='<label for="heredite-voies">'+toCapitalCase(_traduction.classement[_langue])+_traduction.deux_points[_langue]+' </label><select id="heredite-voies">';
    for(var v in _classement_voies)html+='<option value="'+v+'">'+_classement_voies[v].nom[_langue]+'</option>';html+='</select>';
    $('#f-alliance-joueur').after(html);
    maj_globale();
    for(var i in _slots){
        var x=14+((i>3)?(i-4):i)*45;
        var y=(i>3)?53:5;
        $('#slot-'+i).css('background-color','transparent');
        $('#slot-'+i).css('position','absolute');
        $('#slot-'+i).css('overflow','visible');
        $('#slot-'+i).css('width','37px');
        $('#slot-'+i).css('height','36px');
        $('#slot-'+i).css('left',x+'px');
        $('#slot-'+i).css('top',y+'px')
    }
    {
        $('#faction').bind('change keyup',function(){
            var valeur=parseInt($(this).val(),10);
            if(valeur!=heros.faction)change_faction(valeur)
        });
        $('#prev').click(function(){
            if(heros.portrait<2)return false;
            --heros.portrait;
            actualise_portrait()
        });
        $('#next').click(function(){
            if(heros.portrait>=19)return false;
            ++heros.portrait;
            actualise_portrait()
        });
        $('#archetype').bind('change keyup',function(){
            var valeur=($(this).val()=='')?null:parseInt($(this).val(),10);
            if(valeur!=heros.archetype){
                change_archetype(valeur)
            }
        });
        $('#niveau').bind('change keyup',function(){
            var valeur=($(this).val()=='')?null:parseInt($(this).val(),10);
            if(valeur!=heros.niveau){
                change_niveau(valeur)
            }
        });
        $('#tenancier').bind('change keyup',function(){
            change_tenancier(parseInt($(this).val(),10))
        });
        $('#respec').bind('change keyup',function(){
            change_respec(parseInt($(this).val(),10))
        });
        $('#f-carrieres input[type=checkbox]').change(function(){
            if($(this).attr('checked'))active_carriere($(this).val());else desactive_carriere($(this).val())
        });
        $('select.carriere').bind('change keyup',function(){
            change_carriere(parseInt($(this).attr('id').substr(9,1),10),$(this).val())
        });
        $('select.s-talent').change(function(){
            var carriere=parseInt($(this).attr('id').substr(7,1),10);
            var talent=parseInt($(this).attr('id').substr(9,1),10);
            var valeur=parseInt($(this).val(),10);
            change_talent(carriere,talent,valeur)
        });
        $('#dolmens').bind('change keyup',function(){
            var valeur=parseInt($(this).val(),10);
            if(valeur!=heros.dolmens)heros.dolmens=valeur;
            bouton_liens_permanents()
        });
        $('#graals').bind('change keyup',function(){
            var valeur=parseInt($(this).val(),10);
            if(valeur!=heros.graals)heros.graals=valeur;
            bouton_liens_permanents()
        });
        $('.guildes').bind('change keyup',function(){
            var ecole=parseInt($(this).attr('id').substr(8,1),10);
            var valeur=parseInt($(this).val(),10);
            if(valeur!=heros.guildes[ecole])heros.guildes[ecole]=valeur;
            bouton_liens_permanents()
        });
        $('.competence-hereditaire').bind('change keyup',function(){
            var comp=$(this).attr('id').substr(3);
            var valeur=parseInt($(this).val(),10);
            if(valeur!=heros.competences_hereditaires[comp])heros.competences_hereditaires[comp]=valeur;
            maj_adm();
            maj_comp();
            bouton_liens_permanents()
        });
        $('#heredite-voies').bind('change keyup',function(){
            var valeur=parseInt($(this).val(),10);
            if(valeur!=heros.classement_voies)heros.classement_voies=valeur;
            maj_adm();
            maj_comp();
            bouton_liens_permanents()
        });
        $('.slot').mouseover(function(){
            var slot=$(this).attr('id').substr(5,1);
            if(heros.inventaire[slot]!==undefined)$('#slot-'+slot+'-description').removeClass('cache')
        });
        $('.slot').mouseout(function(){
            var slot=$(this).attr('id').substr(5,1);
            if(!$('#slot-'+slot+'-description').hasClass('cache'))$('#slot-'+slot+'-description').addClass('cache')
        });
        $('.menu-artefacts').mouseover(function(event){
            event.stopPropagation();
            var slot=$(this).attr('id').substr(5,1);
            $('#slot-'+slot+'-menu').removeClass('cache')
        });
        $('.menu-artefacts').mouseout(function(){
            var slot=$(this).attr('id').substr(5,1);
            if(!$('#slot-'+slot+'-menu').hasClass('cache'))$('#slot-'+slot+'-menu').addClass('cache')
        });
        $('.slot').click(function(){
            var slot=$(this).attr('id').substr(5,1);
            $('#slot-'+slot+'-menu').removeClass('cache');
            if(!$('#slot-'+slot+'-description').hasClass('cache'))$('#slot-'+slot+'-description').addClass('cache')
        });
        $('.description-artefact').click(function(event){
            event.stopPropagation();
            return false
        });
        $('#nom-heros').autocomplete({
            minLength:4,
            source:function(request,response){
                var liste=[];
            }
        });
        $('#charge-heros').click(function(){
            if($('#nom-heros').val()==''){
                avertissement(_avertissements.nom_associe_heros[_langue]);
                return false
            }
            $('#gestion-heros').addClass('ui-autocomplete-loading');
        });
        $('#enregistre-heros').click(function(){
            if($('#nom-heros').val()==''){
                avertissement(_avertissements.nom_associe_heros[_langue]);
                return false
            }
            var infos={
                action:'enregistre-heros',
                nom:$('#nom-heros').val(),
                monde:$('#mondes').val(),
                portrait:heros.portrait,
                faction:heros.faction,
                archetype:heros.archetype,
                niveau:heros.niveau,
                tenancier:heros.bonus_tenancier,
                respec:heros.respecialisations,
                graals:heros.graals,
                dolmens:heros.dolmens,
                classement_voies:heros.classement_voies
            };

            for(var c=1;c<4;c++){
                if(heros.carriere[c]!==undefined)infos['carriere_'+c]=heros.carriere[c];
                for(var t=1;t<6;t++){
                    if(heros.talent[c]!==undefined&&heros.talent[c][t-1]!==undefined)infos['talent_'+c+'_'+t]=heros.talent[c][t-1]
                }
            }
            for(var a=0;a<8;a++){
                if(heros.inventaire[a]!==undefined)infos['artefact_'+a]=heros.inventaire[a]
            }
            for(var g=0;g<4;g++){
                infos['guildes_'+g]=heros.guildes[g]
            }
            for(var ch in _competences_hereditaires){
                infos[ch]=heros.competences_hereditaires[ch]
            }
            $('#gestion-heros').addClass('ui-autocomplete-loading');
        });
        $('#affiche-explication-gestion-heros').mouseover(function(){
            $(this).attr('src','images/info-survol.png')
        });
        $('#affiche-explication-gestion-heros').mouseout(function(){
            $(this).attr('src','images/info.png')
        });
        $('#affiche-explication-gestion-heros').click(function(){
            if($('#explication-gestion-heros').hasClass('cache'))$('#explication-gestion-heros').removeClass('cache');else $('#explication-gestion-heros').addClass('cache')
        })
    };

    {
        function initialise_avertissements(){
            $('body').append('<div id="masque" class="cache"></div><div id="avertissement" class="cache"></div>')
        }
        function avertissement(message){
            $('#avertissement').html('<p>'+message+'</p><span id="masquer-avertissement">'+_avertissements.masquer_avertissement[_langue]+'</span>').removeClass('cache');
            $('#masque').removeClass('cache');
            var largeur_fenetre=(window.innerWidth)?window.innerWidth:document.documentElement.clientWidth;
            var hauteur_fenetre=(window.innerHeight)?window.innerHeight:(document.documentElement.clientHeight+1);
            var largeur_avertissement=$('#avertissement').width()+22;
            $('#avertissement').css('left',(largeur_fenetre-largeur_avertissement)/2);
            $('#masque').css({
                'height':hauteur_fenetre,
                'width':largeur_fenetre
            });
            $('#masquer-avertissement').click(function(){
                $('#avertissement').addClass('cache');
                $('#masque').addClass('cache')
            })
        }
        function confirmation_o(message){
            $('#avertissement').html('<p>'+message+'</p><span id="confirmation-oui">'+toCapitalCase(_traduction.oui[_langue])+'</span><span id="confirmation-non">'+toCapitalCase(_traduction.non[_langue])+'</span>').removeClass('cache');
            $('#masque').removeClass('cache');
            var largeur_fenetre=(window.innerWidth)?window.innerWidth:document.documentElement.clientWidth;
            var hauteur_fenetre=(window.innerHeight)?window.innerHeight:(document.documentElement.clientHeight+1);
            var largeur_avertissement=$('#avertissement').width()+22;
            $('#avertissement').css('left',(largeur_fenetre-largeur_avertissement)/2);
            $('#masque').css({
                'height':hauteur_fenetre,
                'width':largeur_fenetre
            })
        }
        function confirmation_f(){
            $('#avertissement').addClass('cache');
            $('#masque').addClass('cache')
        }
    }
    var nouvelle_saison=false;
    var saison=3;
    javascript_active();
    affichage_version();
    $('#saison').change(function(){
        nouvelle_saison=controle_saison();
        saison=$('#saison').val();
        maj_globale()
    });
    initialise_avertissements();
    var get=document.location.search;
    var pos=get.indexOf('info=');
    if(pos!=-1){
        analyse_info_url(get.substr(pos+5));
        maj_globale()
    }
    $.preloadImages(_images)
});